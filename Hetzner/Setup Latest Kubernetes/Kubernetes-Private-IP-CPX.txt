#cloud-config
write_files:
  - path: /etc/netplan/51-netcfg.yaml
    permissions: '0644'
    content: |
      network:
        version: 2
        ethernets:
          enp7s0:
            dhcp4: true
            dhcp4-overrides:
              use-dns: false
            nameservers:
              addresses: [8.8.8.8, 8.8.4.4]
            routes:
            - to: 0.0.0.0/0
              via: 10.100.0.1
    append: false
  - path: /etc/fail2ban/jail.local
    content: |
      [DEFAULT] 
      ignoreip = 127.0.0.1/32
      bantime  = 3600
      findtime  = 300
      maxretry = 3
      banaction = iptables-multiport
      backend = auto
      [sshd] 
      enabled = true
    append: false
  - path: /etc/modules-load.d/containerd.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    append: false
  - path: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter
    append: false
runcmd:
  - netplan apply
  - chmod -x /etc/update-motd.d/*
  - apt-get update
  - apt-get upgrade -y
  - apt-get dist-upgrade -y
  - apt-get install fail2ban ufw curl htop nano git nmap nfs-common wget mlocate gnupg2 software-properties-common apt-transport-https ca-certificates -y
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow 22
  - ufw allow from 10.100.0.0/16
  - echo y | ufw enable
  - systemctl enable fail2ban
  - systemctl restart fail2ban
  - modprobe overlay
  - modprobe br_netfilter
  - echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
  - sysctl --system
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
  - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/kubernetes-xenial.gpg
  - add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main" -y
  - apt-get update
  - apt-get install -y containerd.io
  - containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
  - sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
  - systemctl restart containerd
  - systemctl enable containerd
  - apt-get install -y kubelet kubeadm kubectl
  - apt-mark hold kubelet kubeadm kubectl
  - reboot
